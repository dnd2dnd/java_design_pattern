/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DPP_Cal;

import DPP_Memeto.CareTaker;
import DPP_Memeto.Information;
import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author USER
 */
public class PaymentJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PaymentJFrame
     */
    
    public PaymentJFrame() {
        initComponents();
    }
    
     // 패널 변경에 있어 우선 설정해야하는 것들
    public void switchPanels(JPanel panel) { 
        jLayeredPane_Payment.removeAll();
        jLayeredPane_Payment.add(panel);
        jLayeredPane_Payment.repaint();
        jLayeredPane_Payment.revalidate();
    }
    
    // 지불 방법 구별을 위한 변수
    static String cardtxt = "[카드]"; 
    static String cashtxt = "[현금]"; 
    
    // 버튼 이벤트 및 display()에 필요한 변수 선언
    static String orderString = "";  // 주문내용
    static int priceNum = 0; // 판매 가격 
    int paymentNum_cash = 0; // 현금 지불 가격
    int paymentNum_card = 0; // 카드 지불 가격
    int calNum = 0; // 잔돈
    int count_50000won = 0;
    int count_10000won = 0;
    int count_5000won = 0;
    int count_1000won = 0;
    int count_500won = 0;
    int count_100won = 0;
    int errorcount = 0; // 에러카운트
    
    
    // txt 경로 설정
    String fileName_payment = "calculration\\payment_Final.txt"; // txt 입출력에 필요
    String fileName_cashpay = "calculration\\order_history_cash.txt"; // txt 입출력에 필요
    String fileName_cardpay = "calculration\\order_history_card.txt"; // txt 입출력에 필요
    
    // 테스트 상품 가격 및 주문 내용 입력 
    static int price ; 
    static String order ;
    String temporary_order = "";
    int temporary_price = 0;
    
    public void bringorder(String temporary_order ,int temporary_price ) {
        this.temporary_order = temporary_order;
        this.temporary_price = temporary_price;
        
        price = temporary_price;
        order = temporary_order;
        
        Payment cash = new Cash("Cash");
        Payment card = new Card("Card");
        
        order_cash_Label.setText(order);
        price_cash_Label.setText(Integer.toString(price));
        order_credit_card_Label.setText(order);
        price_credit_card_Label.setText(Integer.toString(price));
        
        //전략 선언
        cash.setPaymentStrategy(new CashStrategy()); // 현금 사용 전략
        card.setPaymentStrategy(new CardStrategy()); // 카드 사용 전략
        
        cash.display(order,price);
        card.display(order,price);
        
        cash.orderhistory(order, price);
        card.orderhistory(order, price);
    }
    
    
    
    // Memento
    Information info; // Information 객체 생성
    CareTaker caretaker; // CareTaker 객체 생성
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPane = new javax.swing.JPanel();
        jLayeredPane_Payment = new javax.swing.JLayeredPane();
        cash_Panel = new javax.swing.JPanel();
        title_cash = new javax.swing.JLabel();
        order_cash = new javax.swing.JLabel();
        price_cash = new javax.swing.JLabel();
        payment_cash = new javax.swing.JLabel();
        btn_50000 = new javax.swing.JButton();
        btn_10000 = new javax.swing.JButton();
        btn_5000 = new javax.swing.JButton();
        btn_1000 = new javax.swing.JButton();
        btn_500 = new javax.swing.JButton();
        btn_100 = new javax.swing.JButton();
        btn_pay_cash = new javax.swing.JButton();
        order_cash_Label = new javax.swing.JLabel();
        price_cash_Label = new javax.swing.JLabel();
        payment_cash_Field = new javax.swing.JTextField();
        btn_paycheck_cash = new javax.swing.JButton();
        credit_card_Panel = new javax.swing.JPanel();
        title_credit_card = new javax.swing.JLabel();
        payment_credit_card = new javax.swing.JLabel();
        price_credit_card = new javax.swing.JLabel();
        order_credit_card = new javax.swing.JLabel();
        btn_card_reader = new javax.swing.JButton();
        btn_pay_credit_card = new javax.swing.JButton();
        order_credit_card_Label = new javax.swing.JLabel();
        price_credit_card_Label = new javax.swing.JLabel();
        payment_credit_card_Field = new javax.swing.JTextField();
        btn_paycheck_credit_card = new javax.swing.JButton();
        btn_cash = new javax.swing.JButton();
        btn_credit_card = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cash_Panel.setBackground(new java.awt.Color(255, 255, 255));
        cash_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cash_Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        title_cash.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
        title_cash.setText("CASH");

        order_cash.setText("주문내용:");

        price_cash.setText("가격:");

        payment_cash.setText("지불금액:");

        btn_50000.setText("50000원");
        btn_50000.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_50000MouseClicked(evt);
            }
        });
        btn_50000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_50000ActionPerformed(evt);
            }
        });

        btn_10000.setText("10000원");
        btn_10000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_10000ActionPerformed(evt);
            }
        });

        btn_5000.setText("5000원");
        btn_5000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_5000ActionPerformed(evt);
            }
        });

        btn_1000.setText("1000원");
        btn_1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1000ActionPerformed(evt);
            }
        });

        btn_500.setText("500원");
        btn_500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_500ActionPerformed(evt);
            }
        });

        btn_100.setText("100원");
        btn_100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_100ActionPerformed(evt);
            }
        });

        btn_pay_cash.setText("결제(2)");
        btn_pay_cash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_pay_cashMouseClicked(evt);
            }
        });
        btn_pay_cash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pay_cashActionPerformed(evt);
            }
        });

        order_cash_Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        order_cash_Label.setText(orderString);

        price_cash_Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        price_cash_Label.setText(Integer.toString(priceNum));

        payment_cash_Field.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        payment_cash_Field.setEnabled(false);

        btn_paycheck_cash.setText("결제확인(1)");
        btn_paycheck_cash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_paycheck_cashActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cash_PanelLayout = new javax.swing.GroupLayout(cash_Panel);
        cash_Panel.setLayout(cash_PanelLayout);
        cash_PanelLayout.setHorizontalGroup(
            cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cash_PanelLayout.createSequentialGroup()
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cash_PanelLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(payment_cash)
                            .addComponent(price_cash)
                            .addComponent(order_cash))
                        .addGap(18, 18, 18)
                        .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(order_cash_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(price_cash_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(payment_cash_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)))
                    .addGroup(cash_PanelLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(btn_paycheck_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btn_pay_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cash_PanelLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(title_cash)))
                .addGap(58, 58, 58)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_5000, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_500, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_50000, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_10000, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_1000, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_100, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        cash_PanelLayout.setVerticalGroup(
            cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cash_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(order_cash)
                    .addComponent(order_cash_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(price_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price_cash_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payment_cash)
                    .addComponent(payment_cash_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_pay_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_paycheck_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(cash_PanelLayout.createSequentialGroup()
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cash_PanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btn_50000, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cash_PanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btn_10000, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_1000, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_5000, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cash_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_100, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_500, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        credit_card_Panel.setBackground(new java.awt.Color(255, 255, 255));
        credit_card_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        title_credit_card.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
        title_credit_card.setText("CREDIT CARD");

        payment_credit_card.setText("지불금액:");

        price_credit_card.setText("가격:");

        order_credit_card.setText("주문내용:");

        btn_card_reader.setText("Credit_Crad_Reader(1)");
        btn_card_reader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_card_readerActionPerformed(evt);
            }
        });

        btn_pay_credit_card.setText("결제(3)");
        btn_pay_credit_card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pay_credit_cardActionPerformed(evt);
            }
        });

        order_credit_card_Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        order_credit_card_Label.setText(orderString);

        price_credit_card_Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        price_credit_card_Label.setText(Integer.toString(priceNum));

        payment_credit_card_Field.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        payment_credit_card_Field.setEnabled(false);

        btn_paycheck_credit_card.setText("결제확인(2)");
        btn_paycheck_credit_card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_paycheck_credit_cardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout credit_card_PanelLayout = new javax.swing.GroupLayout(credit_card_Panel);
        credit_card_Panel.setLayout(credit_card_PanelLayout);
        credit_card_PanelLayout.setHorizontalGroup(
            credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credit_card_PanelLayout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(title_credit_card)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(credit_card_PanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(price_credit_card)
                    .addComponent(payment_credit_card)
                    .addComponent(order_credit_card))
                .addGap(22, 22, 22)
                .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(credit_card_PanelLayout.createSequentialGroup()
                        .addComponent(btn_paycheck_credit_card, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(btn_pay_credit_card, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(price_credit_card_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(order_credit_card_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(payment_credit_card_Field))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(btn_card_reader)
                .addGap(46, 46, 46))
        );
        credit_card_PanelLayout.setVerticalGroup(
            credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credit_card_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_credit_card)
                .addGap(30, 30, 30)
                .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(order_credit_card, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(order_credit_card_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(credit_card_PanelLayout.createSequentialGroup()
                        .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(price_credit_card, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price_credit_card_Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(payment_credit_card)
                            .addComponent(payment_credit_card_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_card_reader, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(credit_card_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_pay_credit_card, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_paycheck_credit_card, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jLayeredPane_Payment.setLayer(cash_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane_Payment.setLayer(credit_card_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane_PaymentLayout = new javax.swing.GroupLayout(jLayeredPane_Payment);
        jLayeredPane_Payment.setLayout(jLayeredPane_PaymentLayout);
        jLayeredPane_PaymentLayout.setHorizontalGroup(
            jLayeredPane_PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 743, Short.MAX_VALUE)
            .addGroup(jLayeredPane_PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cash_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane_PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(credit_card_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane_PaymentLayout.setVerticalGroup(
            jLayeredPane_PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
            .addGroup(jLayeredPane_PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cash_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane_PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane_PaymentLayout.createSequentialGroup()
                    .addComponent(credit_card_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        btn_cash.setText("Cash");
        btn_cash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cashActionPerformed(evt);
            }
        });

        btn_credit_card.setText("Credit Card");
        btn_credit_card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_credit_cardActionPerformed(evt);
            }
        });

        btn_exit.setText("종료");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(btn_cash)
                .addGap(108, 108, 108)
                .addComponent(btn_credit_card)
                .addGap(112, 112, 112)
                .addComponent(btn_exit)
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLayeredPane_Payment)
                    .addContainerGap()))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addContainerGap(440, Short.MAX_VALUE)
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cash)
                    .addComponent(btn_credit_card)
                    .addComponent(btn_exit))
                .addGap(27, 27, 27))
            .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLayeredPane_Payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(71, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cashActionPerformed
        switchPanels(cash_Panel); // cash 버튼을 누르면 cash 패널로 전환 ( 기본적으로 cash 패널이 보여짐 )
        JOptionPane.showMessageDialog(null, "현금 결제 입니다.", "현금 결제", JOptionPane.INFORMATION_MESSAGE, null);
        
        if(errorcount >= 1) { // 에러 카운트가 증가했을 시 : cash button을 새로 눌러 결제를 재도전
            JOptionPane.showMessageDialog(null, "비정상종료로 인한 상품내용 복구", "에러카운트 감지", JOptionPane.INFORMATION_MESSAGE);
            info.RestroMemento(caretaker.pop()); 
            order_cash_Label.setText(order);
            price_cash_Label.setText(Integer.toString(price));
            errorcount = 0; // 에러카운트 감소 1 -> 0
        }
    }//GEN-LAST:event_btn_cashActionPerformed

    private void btn_credit_cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_credit_cardActionPerformed
        switchPanels(credit_card_Panel); // credit_card 버튼을 누르면 credit_card 패널로 전환 
        JOptionPane.showMessageDialog(null, "카드 결제 입니다.", "카드 결제", JOptionPane.INFORMATION_MESSAGE, null);
        
        if(errorcount >= 1) { // 에러 카운트가 증가했을 시 : cash button을 새로 눌러 결제를 재도전
            JOptionPane.showMessageDialog(null, "비정상종료로 인한 상품내용 복구", "에러카운트 감지", JOptionPane.INFORMATION_MESSAGE);
            info.RestroMemento(caretaker.pop()); 
            order_credit_card_Label.setText(order);
            price_credit_card_Label.setText(Integer.toString(price));
            errorcount = 0; // 에러카운트 감소 1 -> 0
        }    
    }//GEN-LAST:event_btn_credit_cardActionPerformed

    private void btn_pay_credit_cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pay_credit_cardActionPerformed
        // 카드 결제
        calNum = paymentNum_card - price;

        if(calNum >= 0) { // ** 현재 카드는 지불할 값 = 상품 가격 이기때문에 항상 결제 성공함. 변경은 카드 리더기 참고 **
            JOptionPane.showMessageDialog(null, "결제가 완료 되었습니다", "결제 성공", JOptionPane.INFORMATION_MESSAGE, null);
            // 결제가 완료되었기 때문에 주문내용 , 가격 , 지불 금액 을 초기화
            payment_cash_Field.setText("");
            order_cash_Label.setText("");
            price_cash_Label.setText("");
            dispose(); // 결제창 닫음.
        }
        // 구매 실패한 경우 실패 했다는 창만 보여진다.
        else if(calNum < 0) {
            JOptionPane.showMessageDialog(null, "결제 실패 : 지불 금액이 모자랍니다. 결제 창을 닫습니다." , "결제 실패", JOptionPane.ERROR_MESSAGE, null);
            dispose();
        }
    }//GEN-LAST:event_btn_pay_credit_cardActionPerformed

    private void btn_card_readerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_card_readerActionPerformed
        // 카드 리더기
        paymentNum_card = price; // 지불할 값 = 상품 가격값으로 설정함 (추후 카드에 기본 자금을 주거나 충전형식이면 변경)
        payment_credit_card_Field.setText(Integer.toString(paymentNum_card));
    }//GEN-LAST:event_btn_card_readerActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        // 종료 버튼 : 결제창 종료
        dispose(); // 현재 떠있는 프레임만 닫음
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_paycheck_cashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_paycheck_cashActionPerformed
        //  현금 결제확인 버튼 : 지불할 가격에 대해 지불금액을 최종 확인하는 버튼이다.
        
        //Memento
        info = new Information(order , price); // 객체 생성
        caretaker = new CareTaker(); // 객체 생성
        caretaker.push(info.CreateMemento()); // 현재 Information의 상태 정보를 가지는 Memento를 생성하여 CareTaker에 추가 (push)
        
        // 확인 다이얼로그
        int result = JOptionPane.showConfirmDialog(this,"지불금액을 확정하겠습니까?\n 지불금액:"+paymentNum_cash, "최종확인", JOptionPane.YES_NO_OPTION);
        
        try {
            switch (result) {
            // 사용자가 "예","아니오"의 선택 없이 다이얼로그 창을 닫은 경우
            case JOptionPane.CANCEL_OPTION:     
            break;
            case JOptionPane.YES_NO_OPTION:
            // 사용자가 "예"를 선택한 경우
            String payment_Final_txt = ""+paymentNum_cash;
            String order_history_txt = "지불 가격 :" + paymentNum_cash;
            String Cash_count_txt = "/ [오만원:"+count_50000won+"회], "+"[만원"+count_10000won+"회], "+"[오천원"+count_5000won+"회], "+"[천원"+count_1000won+"회], "+"[오백원"+count_500won+"회], "+"[백원"+count_100won+"회]\r\n";
            try{
                BufferedWriter fw = new BufferedWriter(new FileWriter(fileName_payment,false));  // payment_Final.txt
                fw.write(payment_Final_txt);
                fw.flush();
                fw.close();
                BufferedWriter fw2 = new BufferedWriter(new FileWriter(fileName_cashpay,true)); // order_history.txt 중 지불 가격
                fw2.write(order_history_txt);
                fw2.flush();
                fw2.write(Cash_count_txt);
                fw2.flush();
                fw2.close();
            } catch (Exception e) {
                e.getStackTrace();
                System.exit(1); // 비정상 종료
            }
            count_50000won = 0;
            count_10000won = 0;
            count_5000won = 0;
            count_1000won = 0;
            count_500won = 0;
            count_100won = 0;
            break;
            
            case JOptionPane.NO_OPTION:
            // 사용자가 "아니오" 를 선택한 경우
                // 사용자가 "아니오"를 선택한 경우
            paymentNum_cash = 0;
            payment_cash_Field.setText(Integer.toString(paymentNum_cash));

            String no_payment_txt = "결제 취소";
            try{
                BufferedWriter fw2 = new BufferedWriter(new FileWriter(fileName_cashpay,true)); // order_history_cash.txt 중 지불 가격
                fw2.write(no_payment_txt);
                fw2.flush();
                fw2.close();
            } catch (Exception e) {
                e.getStackTrace(); 
                System.exit(1); // 비정상 종료
            }
            JOptionPane.showMessageDialog(this, "결제취소. ", "결제취소", JOptionPane.ERROR_MESSAGE);
            break;
            
            default: 
                // 비정상 종료 : 확인도 취소도 아닌 행위
                JOptionPane.showMessageDialog(null,"비정상종료감지 : 결제창을 닫습니다. ", "비정상종료", JOptionPane.ERROR_MESSAGE);
                priceNum = 0;
                orderString = "";
                paymentNum_cash = 0;
                payment_cash_Field.setText(Integer.toString(0));
                order_cash_Label.setText(orderString);
                price_cash_Label.setText(Integer.toString(priceNum));
                errorcount++; // 에러 카운트 증가 0 ->  1
                break;
            }
        } catch (Exception e) {
            e.getStackTrace();
            System.exit(1);// 비정상 종료
        }
       
    }//GEN-LAST:event_btn_paycheck_cashActionPerformed

    private void btn_pay_cashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pay_cashActionPerformed

    }//GEN-LAST:event_btn_pay_cashActionPerformed

    private void btn_pay_cashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_pay_cashMouseClicked
        // 현금 결제 버튼. 결제할 가격-상품가격이 0 이상이면 잔돈과 함께 결제 완료 창이 보여진다. 그 후에 각 TextField 초기화와 값 초기화
        calNum = paymentNum_cash - price;

        if(calNum >= 0) {
            JOptionPane.showMessageDialog(null, "결제가 완료 되었습니다.\n 잔돈 :"+ calNum, "결제 성공", JOptionPane.INFORMATION_MESSAGE, null);
            // 결제가 완료되었기 때문에 주문내용 , 가격 , 지불 금액 을 초기화
            payment_cash_Field.setText("");
            order_cash_Label.setText("");
            price_cash_Label.setText("");
            dispose(); // 결제창 닫음.
        }
        // 구매 실패한 경우 실패 했다는 창만 보여진다.
        else if(calNum < 0) {
            JOptionPane.showMessageDialog(null, "결제 실패 : 지불 금액이 모자랍니다." , "결제 실패", JOptionPane.ERROR_MESSAGE, null);
            // 결제 실패이기 때문에 주문내용 , 가격 , 지불 금액을 초기화를 하지않는다.
        }
    }//GEN-LAST:event_btn_pay_cashMouseClicked

    private void btn_100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_100ActionPerformed
        paymentNum_cash += 100;
        payment_cash_Field.setText(Integer.toString(paymentNum_cash));
        count_100won++;
    }//GEN-LAST:event_btn_100ActionPerformed

    private void btn_500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_500ActionPerformed
        paymentNum_cash += 500;
        payment_cash_Field.setText(Integer.toString(paymentNum_cash));
        count_500won++;
    }//GEN-LAST:event_btn_500ActionPerformed

    private void btn_1000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_1000ActionPerformed
        paymentNum_cash += 1000;
        payment_cash_Field.setText(Integer.toString(paymentNum_cash));
        count_1000won++;
    }//GEN-LAST:event_btn_1000ActionPerformed

    private void btn_5000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_5000ActionPerformed
        paymentNum_cash += 5000;
        payment_cash_Field.setText(Integer.toString(paymentNum_cash));
        count_5000won++;
    }//GEN-LAST:event_btn_5000ActionPerformed

    private void btn_10000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_10000ActionPerformed
        paymentNum_cash += 10000;
        payment_cash_Field.setText(Integer.toString(paymentNum_cash));
        count_10000won++;
    }//GEN-LAST:event_btn_10000ActionPerformed

    private void btn_50000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_50000ActionPerformed
        paymentNum_cash += 50000;
        payment_cash_Field.setText(Integer.toString(paymentNum_cash)); // 숫자 -> 문자
        count_50000won++;
    }//GEN-LAST:event_btn_50000ActionPerformed

    private void btn_50000MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_50000MouseClicked

    }//GEN-LAST:event_btn_50000MouseClicked

    private void btn_paycheck_credit_cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_paycheck_credit_cardActionPerformed
        // 카드 : 지불할 가격에 대해 지불금액을 최종 확인하는 버튼이다.
        
        //Memento
        info = new Information(order , price); // 객체 생성
        caretaker = new CareTaker(); // 객체 생성
        caretaker.push(info.CreateMemento()); // 현재 Information의 상태 정보를 가지는 Memento를 생성하여 CareTaker에 추가 (push)
        
        //확인 다이얼로그
        int result = JOptionPane.showConfirmDialog(this,"지불금액을 확정하겠습니까?\n 지불금액:"+paymentNum_card, "최종확인", JOptionPane.YES_NO_OPTION);
        
        switch (result) {
            // 사용자가 "예","아니오"의 선택 없이 다이얼로그 창을 닫은 경우
            case JOptionPane.CANCEL_OPTION:
            break;
            case JOptionPane.YES_NO_OPTION:
            // 사용자가 "예"를 선택한 경우
            String inputtext = JOptionPane.showInputDialog(null, "서명 및 싸인을 해주세요.", "서명 및 싸인", JOptionPane.INFORMATION_MESSAGE);
            String payment_Final_txt = ""+paymentNum_card;
             String sign = inputtext;
            String order_history_txt = "지불 가격 :" + paymentNum_card + "[카드결제] " + "본인확인 : " + sign +"\r\n" ;
           
            try{
                BufferedWriter fw = new BufferedWriter(new FileWriter(fileName_payment,false));  // payment_Final.txt
                fw.write(payment_Final_txt);
                fw.flush();
                fw.close();
                BufferedWriter fw2 = new BufferedWriter(new FileWriter(fileName_cardpay,true)); // order_history_card.txt 중 지불 가격
                fw2.write(order_history_txt);
                fw2.flush();
                fw2.close();
            } catch (Exception e) {
                e.getStackTrace();
            }
            break;
            
            case JOptionPane.NO_OPTION:
            // 사용자가 "아니오"를 선택한 경우
            paymentNum_card = 0;
            payment_credit_card_Field.setText(Integer.toString(paymentNum_card));

            String no_payment_txt = "결제 취소";
            try{
                BufferedWriter fw2 = new BufferedWriter(new FileWriter(fileName_cardpay,true)); // order_history.txt 중 지불 가격
                fw2.write(no_payment_txt);
                fw2.flush();
                fw2.close();
            } catch (Exception e) {
                e.getStackTrace();
            }
            JOptionPane.showMessageDialog(this, "결제취소.", "결제취소", JOptionPane.ERROR_MESSAGE);
            
            break;
                
            default:
                // 비정상 종료 : 확인도 취소도 아닌 행위
                JOptionPane.showMessageDialog(null,"비정상종료감지 : 결제창을 닫습니다. ", "비정상종료", JOptionPane.ERROR_MESSAGE);
                priceNum = 0;
                orderString = "";
                paymentNum_card = 0;
                order_credit_card_Label.setText(orderString);
                payment_credit_card_Field.setText(Integer.toString(0));
                price_credit_card_Label.setText(Integer.toString(priceNum));
                errorcount++; // 에러 카운트 증가 0 ->  1
                break;
        }
    }//GEN-LAST:event_btn_paycheck_credit_cardActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                PaymentJFrame f = new PaymentJFrame(); // 프레임 생성
                f.setVisible(true);
                f.setResizable(false); // 사이즈 고정  
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_100;
    private javax.swing.JButton btn_1000;
    private javax.swing.JButton btn_10000;
    private javax.swing.JButton btn_500;
    private javax.swing.JButton btn_5000;
    private javax.swing.JButton btn_50000;
    private javax.swing.JButton btn_card_reader;
    private javax.swing.JButton btn_cash;
    private javax.swing.JButton btn_credit_card;
    private javax.swing.JButton btn_exit;
    public static javax.swing.JButton btn_pay_cash;
    private javax.swing.JButton btn_pay_credit_card;
    private javax.swing.JButton btn_paycheck_cash;
    private javax.swing.JButton btn_paycheck_credit_card;
    private javax.swing.JPanel cash_Panel;
    private javax.swing.JPanel contentPane;
    private javax.swing.JPanel credit_card_Panel;
    private javax.swing.JLayeredPane jLayeredPane_Payment;
    private javax.swing.JLabel order_cash;
    private javax.swing.JLabel order_cash_Label;
    private javax.swing.JLabel order_credit_card;
    private javax.swing.JLabel order_credit_card_Label;
    private javax.swing.JLabel payment_cash;
    private javax.swing.JTextField payment_cash_Field;
    private javax.swing.JLabel payment_credit_card;
    private javax.swing.JTextField payment_credit_card_Field;
    private javax.swing.JLabel price_cash;
    private javax.swing.JLabel price_cash_Label;
    private javax.swing.JLabel price_credit_card;
    private javax.swing.JLabel price_credit_card_Label;
    private javax.swing.JLabel title_cash;
    private javax.swing.JLabel title_credit_card;
    // End of variables declaration//GEN-END:variables

}
